# Compiler and Flags
CXX = g++ 
# All directories that the compiler should look for
CXXFLAGS = -I./include -I./src/Assets -I./src/Network -I./src/Tetromino -I./src/Window -std=c++17        # Include directory
LDFLAGS = -L./lib -lsfml-graphics -lsfml-window -lsfml-system -lsfml-audio -lsfml-network  # Library directory

# Target Executable
TARGET = main.exe

# Object Files
OBJECTS = src/Assets/Colors.o src/Assets/PacketsMap.o \
		  src/Network/Client.o src/Network/Server.o \
		  src/Tetromino/Blocks.o src/Tetromino/Game.o  src/Tetromino/Score.o \
		  src/Window/WindowManager.o src/Window/GridInfo.o src/Window/Grid.o \
		  src/main.o #SAME FOLDER TAHT DDL EXISTS

# Default Target
all: $(TARGET)

# Linking Step
$(TARGET): $(OBJECTS)
	$(CXX) -o $@ $(OBJECTS) $(LDFLAGS)

# Compilation Step
src/main.o: src/main.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@

src/PacketsMap.o: src/Assets/PacketsMap.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@

src/Colors.o: src/Assets/Colors.cpp src/Assets/Colors.h
	$(CXX) $(CXXFLAGS) -c $< -o $@

src/Server.o: src/Network/Server.cpp src/Network/Server.h
	$(CXX) $(CXXFLAGS) -c $< -o $@

src/Client.o: src/Network/Client.cpp src/Network/Client.h
	$(CXX) $(CXXFLAGS) -c $< -o $@

src/WindowManager.o: src/Window/WindowManager.cpp src/Window/WindowManager.h
	$(CXX) $(CXXFLAGS) -c $< -o $@

src/GridInfo.o: src/Window/GridInfo.cpp src/Window/GridInfo.h
	$(CXX) $(CXXFLAGS) -c $< -o $@

src/Grid.o: src/Window/Grid.cpp src/Window/Grid.h
	$(CXX) $(CXXFLAGS) -c $< -o $@

src/Blocks.o: src/Tetromino/Blocks.cpp src/Tetromino/Blocks.h
	$(CXX) $(CXXFLAGS) -c $< -o $@

src/Game.o: src/Tetromino/Game.cpp src/Tetromino/Game.h
	$(CXX) $(CXXFLAGS) -c $< -o $@

src/Score.o: src/Score/Score.cpp src/Score/Score.h
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Run the Program
run: $(TARGET)
	./$(TARGET)

# Clean Build Files
clean:
	del /f $(subst /,\,$(OBJECTS)) $(subst /,\,$(TARGET) ) 2>nul || true
# rm -f $(OBJECTS) $(TARGET) ##FOR LINUX

# Phony targets
.PHONY: all run clean
